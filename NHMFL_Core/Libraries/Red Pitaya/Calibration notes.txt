api/acq_handler.c:

static const int ADC_BITS = 14;
int acq_GetDataV2(uint32_t pos, uint32_t* size, float* buffer1, float* buffer2)

{
int32_t dc_offs1=calib.fe_ch1_hi_offs
uint32_t calibScale1 = calib_GetFrontEndScale(RP_CH_1, gain1); /* returns calib.fe_ch1_fs_g_hi */
*buffer1++ = cmn_CnvCntToV(ADC_BITS, *ptr1++, gainV1, calibScale1, dc_offs1, 0.0);
}

api/common.c:

float cmn_CnvCntToV(uint32_t field_len, uint32_t cnts, float adc_max_v, uint32_t calibScale, int calib_dc_off, float user_dc_off)
{
    int32_t calib_cnts = cmn_CalibCnts(field_len, cnts, calib_dc_off);
    return cmn_CnvCalibCntToV(field_len, calib_cnts, adc_max_v, cmn_CalibFullScaleToVoltage(calibScale), user_dc_off);
}

int32_t cmn_CalibCnts(uint32_t field_len, uint32_t cnts, int calib_dc_off)
{
return cnts -= calib_dc_off;
}

float cmn_CalibFullScaleToVoltage(uint32_t fullScaleGain) {

    return (float) ((float)fullScaleGain  * 100.0 / ((uint64_t)1<<32));
}

float cmn_CnvCalibCntToV(uint32_t field_len, int32_t calib_cnts, float adc_max_v, float calibScale, float user_dc_off)
{
